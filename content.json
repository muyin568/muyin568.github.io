{"pages":[{"title":"About","date":"2025-03-11T14:11:10.173Z","path":"about/index.html","text":""},{"title":"categories","date":"2025-03-12T00:21:03.000Z","path":"categories/index.html","text":""},{"title":"Tags","date":"2025-03-12T23:44:41.796Z","path":"tags/index.html","text":""}],"posts":[{"title":"802.15.4-mac_services","date":"2025-03-27T00:35:47.000Z","path":"wiki/802-15-4-mac-services/","text":"介绍了 802.15.4(2015) mac layer services, 包括 genernal review mlme &#x2F; mcps &#x2F; mac constans &amp;&amp; mac pib 。 MAC 层（媒体访问控制层）负责协调设备之间的无线通信，并分为两个主要部分： 1. MAC 层管理实体（MLME, MAC Layer Management Entity） 2. MAC 公共部分子层（MCPS, MAC Common Part Sublayer） SAP 的概念在 IEEE 802.15.4 标准中，SAP（服务访问点） 是不同协议层之间的接口，用于数据传输和管理控制。SAP 允许协议栈的不同层之间交换数据和命令，例如 MCPS-SAP 和 MLME-SAP。 SAP 的作用在协议栈中，不同层的功能不同，而 SAP 作为接口，提供标准化的交互方式，例如： 应用层 ↔️ 网络层 通过 NLDE-SAP（网络层数据实体 SAP） 交换数据。 网络层 ↔️ MAC 层 通过 NLME-SAP（网络层管理实体 SAP） 进行管理操作。 MAC 层 ↔️ 物理层 通过 PLME-SAP（物理层管理实体 SAP） 进行通信。 802.15.4 中常见的 SAP SAP 名称 作用 涉及层 MCPS-SAP（MAC Common Part Sublayer Service Access Point） 处理 MAC 层数据传输 MAC 层 ↔️ 上层 MLME-SAP（MAC Layer Management Entity Service Access Point） 处理 MAC 层管理功能（如信标、关联） MAC 层 ↔️ 上层 PLME-SAP（Physical Layer Management Entity Service Access Point） 物理层管理（如信道设置） 物理层 ↔️ MAC 层 PD-SAP（Physical Data Service Access Point） 物理层数据传输 物理层 ↔️ MAC 层 SAP 的工作方式SAP 主要通过以下方式进行交互： ind + resp ; req + confirm Indication（指示）：下层通知上层某个事件发生（如收到数据）。 Response（响应）：上层对某个请求的回应（如关联请求的确认）。 Request（请求）：上层请求下层执行某项操作（如发送数据）。 Confirm（确认）：下层反馈请求的执行结果（如数据发送成功或失败）。 SAP 示例（MCPS-DATA 发送流程）假设一个设备要发送数据，SAP 交互流程如下： 上层调用 MCPS-DATA.request，请求 MAC 层发送数据。 MAC 层处理 该请求，并通过物理层发送数据。 如果对方收到数据并回复 ACK，MAC 层生成 MCPS-DATA.confirm 反馈给上层，表示发送成功。 如果对方未响应，MAC 层可能会重传，最终给出 MCPS-DATA.confirm，通知上层发送成功或失败。 MLME primtivesMLME-SAP（MAC 层管理实体服务访问点）接口用于上层与 MAC 层之间的管理交互。它提供了一系列的 原语（primitives），用于执行网络管理、配置以及控制操作。包括设备的加入&#x2F;退出网络、扫描、同步、参数设置、信标通知等。这些原语是 MAC MLME 的核心部分，帮助设备与网络协调工作，确保 PAN 的正常运行。 common 情况处理(MLME 处理 higher layer 内容时出现问题)错误处理（Request（请求）） 如果在 请求原语 的 发送帧安全处理（如 9.2.1 所述）中发生任何错误，MLME 会丢弃该帧，并使用相应的确认原语，返回 发送帧安全处理 中的错误。 错误处理（Response（响应）） 如果在 响应原语 的 发送帧安全处理（如 9.2.1 所述）中发生任何错误，MLME 会丢弃该帧，并使用 MLME-COMM-STATUS.indication 原语，返回 发送帧安全处理 中的错误。 参数无效或超出范围 如果 请求原语 中的任何参数不受支持或超出范围，MAC 子层 会使用 INVALID_PARAMETER 状态值返回相应的确认原语。 如果 响应原语 中的任何参数不受支持或超出范围，MAC 子层 会使用 INVALID_PARAMETER 状态值返回 MLME-COMM-STATUS.indication 原语。 CSMA-CA 失败 如果由于 CSMA-CA 算法失败，MLME 无法发送 请求原语 所需的帧，MLME 会使用 CHANNEL_ACCESS_FAILURE 状态值返回相应的确认原语。 ACK 未收到 如果 MLME 成功发送 请求原语 所需的帧，但没有收到预期的确认帧，MLME 会使用 NO_ACK 状态值返回相应的确认原语。 关键MLME原语 MLME-ASSOCIATE: 设备请求加入网络时使用此原语。包含关联请求、确认、指示和响应。设备通过该原语与 PAN 协调器建立连接。 MLME-SCAN: 该原语用于启动扫描操作，寻找可用的 PAN 网络。可以进行主动扫描（发送探测请求）或被动扫描（接收信标）。 MLME-SYNC: 该原语用于设备与协调器之间的同步，确保设备与网络的时序同步。 MLME-START: 该原语用于协调器启动或重新启动一个 PAN，分配新的 PAN ID，并开始信标传输。 MLME-BEACON-NOTIFY: 设备接收到 PAN 协调器的信标时使用此原语，通知设备信标信息，如网络同步信息和协作参数。 MLME-PROMISCUOUSMODE: 该原语允许设备进入混杂模式，即设备可以接收所有频段上的数据包，而不仅仅是属于其自己 PAN 的数据包。 MLME-SET 和 MLME-GET: 这两个原语用于配置和查询 MAC 层的参数，例如 PAN ID、信标周期、重试次数等。 举例MLME-ASSOCIATE.request mlme primitive 类似于 bluetooth 的 hci cmd / hci evt，去进行一些 mac layer 控制管理 ，在802.15.4 中都有详细的参数描述解释定义。下面举例MLME-ASSOCIATE.request： MLME-ASSOCIATE.request 原语详细解析在 IEEE 802.15.4 标准中，MLME-ASSOCIATE.request 是一个用于设备请求加入 PAN 网络 的原语。设备通过该原语向 MAC 层请求与 PAN 协调器 建立关联。 MLME-ASSOCIATE.request 的参数 MLME-ASSOCIATE.request 原语包含以下主要参数： 参数名称 描述 deviceAddress 设备的地址，通常是设备的 MAC 地址。可以是 短地址（16位）或 扩展地址（64位）。 capabilityInformation 设备的能力信息，用来表示设备是否支持某些功能（例如，是否支持 FFD（Full Function Device）或 RFD（Reduced Function Device）等）。 securityLevel 表示安全级别，指明通信过程中使用的加密方式及密钥管理。 pansId 指定目标 PAN 的 PAN ID。设备需要指定与之关联的 PAN。 assocDeviceAddress 设备的目标关联设备的地址。设备会尝试与此地址对应的 PAN 协调器建立联系。 MLME-ASSOCIATE.request 的执行流程 当 MLME-ASSOCIATE.request 被发出时，MAC 层会按照以下步骤执行： 参数验证MAC 层首先验证原语中的 参数，例如设备地址、能力信息等是否合理。如果参数无效，原语将失败。 访问权限检查MAC 层会根据设备的类型（如 FFD 或 RFD）和能力信息，决定是否允许设备与目标 PAN 协调器建立连接。FFD 可以充当 PAN 协调器，而 RFD 只能与 FFD 设备建立连接。 发送关联请求如果验证通过，MAC 层将构造一个 关联请求帧（Association Request Frame）。该帧包含设备的地址、能力信息等数据，然后发送到目标 PAN 协调器。 等待响应协调器收到请求后，会通过 MLME-ASSOCIATE.response 原语向设备响应，表明关联是否成功。如果成功，设备将被分配一个 PAN 地址（如果是新的设备）。 关联成功或失败 如果关联成功，MAC 层会使用 MLME-ASSOCIATE.confirm 向上层发送确认，表示设备已经成功加入网络。 如果失败，MAC 层会发送失败指示（例如，因 PAN ID 不匹配或设备能力不符合要求）。 与 PIB（Protocol Information Base）的关系 在 MLME-ASSOCIATE.request 执行时，PIB（协议信息库）中的相关参数起着重要作用。PIB 包含与设备配置和网络管理相关的所有信息，以下是几个可能影响关联过程的 PIB 项目： macPANId设备将会通过 MLME-ASSOCIATE.request 中的 pansId 参数向目标协调器发起关联请求，PIB 中的 macPANId 必须与请求的 PAN ID 匹配。 macShortAddress 和 macExtendedAddress设备的地址会通过 deviceAddress 参数传递。MAC 层会根据 PIB 中存储的设备地址信息来处理设备的身份验证与连接。 macAssociationPermit如果 PIB 中的 macAssociationPermit 为 FALSE，即禁用关联，MAC 层会拒绝设备的关联请求。 macBeaconOrder如果设备在扫描过程中检测到的信标符合其 macBeaconOrder（信标周期）配置，MAC 层才会继续发送关联请求。 macDeviceType设备的类型（FFD 或 RFD）通过 capabilityInformation 参数传递。PIB 中的 macDeviceType 会影响设备是否能成功加入网络。 MCPS primtivesMAC 数据服务（MAC Data Service）通过 MCPS（MAC 层数据服务）接口提供了数据传输的基本功能 功能 发送数据：用于将数据从发送方传输到接收方。数据传输可以通过 点对点通信 或 广播 进行。 接收数据：MAC 层也能够处理从物理层接收到的数据包，将其传递给上层。 保证数据的可靠性：MAC 层通过重新传输机制、确认机制来保证数据的传输可靠性。 传输类型 数据帧：通过数据服务传输的基本单元是数据帧（Data Frame），包括数据的有效载荷、目的地址、源地址等信息。 确认（ACK）帧：用于确认数据帧的接收。 MCPS 原语 MCPS-DATA.request：请求发送数据帧。 MCPS-DATA.confirm：确认数据发送的结果。 MCPS-DATA.indication：通知上层接收到的数据帧。 Purging 操作 MCPS-PURGE.request：请求清除数据队列中的未成功发送的数据帧。 MCPS-PURGE.confirm：确认是否成功清除数据队列中的数据帧。 举例MCPS-DATA.request在 IEEE 802.15.4 中，MCPS-DATA.request 是用于请求发送数据帧的原语。 1. MCPS-DATA.request 参数解析 MCPS-DATA.request 原语的参数通常包括以下内容： 参数名称 描述 dstAddr 目标设备地址，通常为 短地址 或 扩展地址。可以是单播地址或广播地址。 srcAddr 源设备地址，通常为发送设备的 短地址 或 扩展地址。 frame 要发送的数据帧，其中包括数据的有效载荷、目的地址、源地址等信息。 securityLevel 数据传输的安全级别，指示是否进行加密、验证等。此字段可以影响数据发送的安全性。 ackRequired 是否要求接收方返回确认帧（ACK）。如果为 true，MAC 层将等待接收方的 ACK 响应。 txOptions 传输选项，可以指定数据帧发送的额外特性（例如是否为广播帧等）。 2. MCPS-DATA.request 执行流程 2.1 数据准备 当上层应用或协议栈调用 MCPS-DATA.request 请求发送数据时，MAC 层会进行以下准备工作： 验证请求参数：检查目标地址、源地址等字段是否有效。 构建数据帧：根据请求中的 frame 和其他参数构建数据帧。该数据帧包括了源地址、目标地址、有效载荷、序列号等信息。 检查安全性设置：根据 securityLevel 参数，MAC 层会决定是否进行数据加密或认证。 2.2 与 PIB（协议信息库）的关系MAC 层会查询 PIB（Protocol Information Base） 来获取与数据发送相关的配置信息。PIB 中的一些关键参数影响数据的发送过程： macPANId：用于判断数据是否属于目标 PAN。如果数据的 dstAddr 与 macPANId 不匹配，发送操作将失败。 macShortAddress 和 macExtendedAddress：这些字段用于构建源地址和目标地址，特别是设备的 16 位或 64 位地址。 macAckWaitDuration：控制数据帧等待 ACK 响应的时间。如果 ackRequired 为 true，MAC 层会使用该配置项来设置等待 ACK 的最大时长。 macMaxFrameRetries：如果数据发送失败，MAC 层会尝试重新发送。此参数指定最大重试次数。 macMaxFrameSize：控制单个数据帧的最大大小。如果数据帧超过最大帧大小，MAC 层可能会将数据进行分段。 2.3 数据帧的发送 物理层发送：MAC 层会将构建好的数据帧交给物理层进行发送。物理层负责将数据转换为无线信号并传输。 2.4 确认机制 如果 ackRequired 为 true，MAC 层会等待接收方发送 ACK 帧作为确认。如果在指定时间内没有收到 ACK，MAC 层会根据 PIB 中的 macMaxFrameRetries 设置重试次数，直到成功或超出最大重试次数。 2.5 发送确认 如果数据成功发送，MAC 层会通过 MCPS-DATA.confirm 向上层应用发送数据发送成功的确认。 如果发送失败（例如超时或重试次数用尽），MAC 层会通知上层失败原因。 MAC constants &amp;&amp; PIB在 IEEE 802.15.4 标准中，MAC（Medium Access Control）层使用一些常量和 PIB（Protocol Information Base）属性来控制和配置设备的行为。常量用于设置 MAC 层操作的参数范围，而 PIB 属性则保存设备的配置和状态信息。以下是 MAC 常量 和 PIB 属性 的详细说明。 1. MAC 常量 1.1 常量概述MAC 常量是预定义的常量值，用于指定在 MAC 层操作中使用的各种参数。例如，这些常量用于数据传输、重试次数、最大帧大小等。它们定义了 MAC 层的一些行为规范。 1.2 常见的 MAC 常量 常量名称 描述 MAC_MAX_FRAME_RETRIES 最大帧重试次数。指定在发送数据时，MAC 层允许的最大重试次数。默认值为 3。 MAC_ACK_WAIT_DURATION 等待确认的时间（单位：符号时间），指定了设备在发送数据后，最多等待多少符号时间以接收 ACK。 MAC_MAX_FRAME_SIZE 最大数据帧大小。指定了数据帧的最大长度（以字节为单位）。 MAC_PAN_ID PAN（Personal Area Network）ID，指定设备所属的 PAN 标识符。 MAC_BROADCAST_ADDR 广播地址。通常用于广播数据包。 MAC_SECURITY_ENABLED 安全功能启用标志。如果为 true，表示启用安全功能（如加密和认证）。 MAC_FRAME_TYPE_DATA 数据帧类型常量。指定该数据帧是数据传输帧。 MAC_FRAME_TYPE_ACK 确认帧类型常量。指定该数据帧是 ACK 确认帧。 1.3 常量用途这些常量定义了设备的行为规范，例如： MAC_MAX_FRAME_RETRIES 控制最大重试次数，确保设备不会因为多次发送失败而进入无限重试状态。 MAC_ACK_WAIT_DURATION 确定了设备在发送数据后等待确认的时间，这对于网络中的数据传输延迟控制至关重要。 MAC_SECURITY_ENABLED 则控制设备是否使用加密和认证机制，提高数据传输的安全性。 2. PIB 属性 2.1 PIB 概述PIB（Protocol Information Base）是一个存储协议配置信息的数据库。它保存了与 MAC 层的操作相关的各种配置和状态信息。PIB 属性用于配置设备的 MAC 层行为，并在设备运行时进行修改和读取。 2.2 常见的 PIB 属性 属性名称 描述 macShortAddress 设备的短地址（16 位）。用于标识设备在同一 PAN 内的唯一性。 macExtendedAddress 设备的扩展地址（64 位），在 PAN 内唯一标识设备。 macPANId PAN 的标识符，设备所属的个人区域网络的 ID。 macBeaconOrder 信标周期的周期性参数，指示设备发射信标的频率。 macSuperframeOrder 超帧顺序，决定设备在网络中活动时使用的时间段。 macMaxFrameRetries 数据传输失败后的最大重试次数。 macMaxCSMABackoffs 在发送数据之前，设备允许的最大退避次数，用于避免碰撞。 macSecurityMode 安全模式，指示是否启用加密和认证。 macRxOnWhenIdle 设备是否在空闲时保持接收模式。如果为 true，设备即使在空闲时也能接收数据。 macMaxFrameSize 允许的最大数据帧大小。 macAckWaitDuration 等待确认的最大时间（符号时间单位）。 macTransactionPersistenceTime 事务持久化时间，指示在事务期间内设备可以保持数据传输状态。 2.3 PIB 属性用途PIB 属性用于控制和配置设备在 MAC 层 上的行为。下面是一些常见的 PIB 属性及其应用： macShortAddress 和 macExtendedAddress：用于设备地址的标识。短地址通常用于快速数据传输，而扩展地址用于全局唯一的标识。 macPANId：用于标识设备所属的网络。PAN ID 是设备加入网络的关键参数，确保设备可以识别网络并与其他设备进行通信。 macMaxFrameRetries：控制重试次数，确保数据的可靠传输。 macSecurityMode：确定是否启用安全特性（如加密和认证），保证数据的安全性。 macMaxCSMABackoffs：控制发送失败后的退避次数，用于减少碰撞并提高传输效率。 2.4 PIB 和 MAC 常量的关系许多 PIB 属性 实际上是由 MAC 常量 决定的。例如，macMaxFrameRetries 和 MAC_MAX_FRAME_RETRIES 常量是相互关联的。常量用于设置默认值，而 PIB 属性用于在运行时修改和读取设备的配置。 3. PIB 属性的访问与修改 3.1 读取和设置 PIB 属性设备可以通过特定的接口来读取和修改 PIB 属性。例如，设备可以通过 MLME（MAC Layer Management Entity）接口来设置或获取 PIB 属性。 示例：设置 PIB 属性 MLME_SET.request &#123; pibAttribute: macShortAddress, pibAttributeValue: 0x1234 &#125;","tags":[{"name":"802.15.4","slug":"802-15-4","permalink":"http://example.com/tags/802-15-4/"}],"categories":[{"name":"802.15.4","slug":"802-15-4","permalink":"http://example.com/categories/802-15-4/"}]},{"title":"hexo github.io image 显示异常","date":"2025-03-25T23:53:42.000Z","path":"wiki/hexo-image-sync-my-solution/","text":"在使用 hexo 写 blog 插入图片时，大多数会使用 typora&#x2F;markdown allin one 等去 preview，此时的(preview) img path 是相对 source&#x2F;_posts&#x2F;**.md 文档的路径；而 github.io 静态页面展示图片是要使用public 为 root path 的路径引用图片；路径不match 会导致图片显示异常，网上也有很多的案例和解法，使用起来感觉始终不顺手，在这里放上我的解法。 1.创建如下目录结构：blog/source/images , blog/public/images , blog/sync.py 2.编辑 **.md 并想要预览时，请插入类似下面的图片链接 1&lt;center&gt;&lt;img src=&quot;/../images/802-15-4-mac-frm/4_beacon_frm.png&quot; width=&quot;800px&quot;&gt;&lt;/center&gt; 3.完成编辑后在 blog folder 下运行 python3 sync.py add sync, 会将 source/images 下 img sync 到 public/imgs, 同时将所有 **.md 中的图片链接前加“/”转为如下，使可以在github.io上显示 1&lt;center&gt;&lt;img src=&quot;/../images/802-15-4-mac-frm/4_beacon_frm.png&quot; width=&quot;800px&quot;&gt;&lt;/center&gt; 4.运行 python3 sync.py add sync 后 md preview 将无法正常显示图片，如果想重新编辑可以再运行 python3 sync.py remove 即可 5.我的上blog step: python3 sync.py add sync -> hexo c -> hexo g -> hexo d **下面附上sync.py的code，这个是请教chatgpt帮忙写的** 命令 作用 python sync_and_modify.py sync 仅同步 source/images 到 public/images python sync_and_modify.py add 仅增加 Markdown 中 img src 里的 / python sync_and_modify.py sync add 同步图片 + 增加 / python sync_and_modify.py remove 仅去掉 Markdown 中 img src 里的 /（单独执行） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108import osimport shutilimport reimport sysdef sync_folders(src, dest): &quot;&quot;&quot; 同步 source/images 到 public/images，确保文件和目录保持一致。 &quot;&quot;&quot; if not os.path.exists(src): print(f&quot;源目录 &#123;src&#125; 不存在！&quot;) return if not os.path.exists(dest): os.makedirs(dest) # 如果目标文件夹不存在，则创建 for root, dirs, files in os.walk(src): rel_path = os.path.relpath(root, src) target_dir = os.path.join(dest, rel_path) if not os.path.exists(target_dir): os.makedirs(target_dir) for file in files: src_file = os.path.join(root, file) dest_file = os.path.join(target_dir, file) if not os.path.exists(dest_file) or os.path.getmtime(src_file) &gt; os.path.getmtime(dest_file): shutil.copy2(src_file, dest_file) print(f&quot;同步文件: &#123;src_file&#125; -&gt; &#123;dest_file&#125;&quot;) print(&quot;图片同步完成！&quot;)def modify_image_paths_in_markdown(posts_folder, mode): &quot;&quot;&quot; 遍历 source/_posts 目录下所有 .md 文件，修改 img 标签中的 src 路径。 参数: posts_folder: Markdown 文件所在目录（如 source/_posts） mode: &quot;remove_slash&quot; -&gt; 移除 img src 里开头的 &quot;/&quot; &quot;add_slash&quot; -&gt; 给 img src 里开头增加 &quot;/&quot; &quot;&quot;&quot; if not os.path.exists(posts_folder): print(f&quot;Markdown 目录 &#123;posts_folder&#125; 不存在！&quot;) return # 正则匹配 `&lt;img src=&quot;...&quot;` 语法 pattern_remove_slash = re.compile(r&#x27;(&lt;img src=&quot;)/(\\.\\./images/[^&quot;]+&quot;)&#x27;) pattern_add_slash = re.compile(r&#x27;(&lt;img src=&quot;)(\\.\\./images/[^&quot;]+&quot;)&#x27;) modified_files = 0 for filename in os.listdir(posts_folder): if filename.endswith(&quot;.md&quot;): file_path = os.path.join(posts_folder, filename) with open(file_path, &quot;r&quot;, encoding=&quot;utf-8&quot;) as f: content = f.read() # 根据模式修改 if mode == &quot;remove_slash&quot;: new_content = pattern_remove_slash.sub(r&#x27;\\1\\2&#x27;, content) elif mode == &quot;add_slash&quot;: new_content = pattern_add_slash.sub(r&#x27;\\1/\\2&#x27;, content) else: print(f&quot;未知模式：&#123;mode&#125;&quot;) return # 如果内容发生变化，则写入文件 if content != new_content: with open(file_path, &quot;w&quot;, encoding=&quot;utf-8&quot;) as f: f.write(new_content) print(f&quot;已修改文件: &#123;filename&#125;&quot;) modified_files += 1 print(f&quot;Markdown 文件路径修改完成，共修改 &#123;modified_files&#125; 个文件！&quot;)def main(): # 设置文件夹路径 source_images = &quot;source/images&quot; public_images = &quot;public/images&quot; markdown_folder = &quot;source/_posts&quot; # 解析命令行参数 args = set(arg.lower() for arg in sys.argv[1:]) if not args: print(&quot;用法: python sync_and_modify.py [sync] [add] | remove&quot;) sys.exit(1) if &quot;remove&quot; in args and len(args) &gt; 1: print(&quot;错误：remove 只能单独执行，不能与 sync 或 add 组合！&quot;) sys.exit(1) if &quot;sync&quot; in args: sync_folders(source_images, public_images) if &quot;add&quot; in args: modify_image_paths_in_markdown(markdown_folder, mode=&quot;add_slash&quot;) if &quot;remove&quot; in args: modify_image_paths_in_markdown(markdown_folder, mode=&quot;remove_slash&quot;)if __name__ == &quot;__main__&quot;: main()","tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}],"categories":[{"name":"技术杂谈","slug":"技术杂谈","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%88/"}]},{"title":"802.15.4-mac_frm-general_review","date":"2025-03-10T11:23:52.000Z","path":"wiki/802-15-4-mac-frm/","text":"主要介绍了 802.15.4 mac layer pdu 形式与各 bit 含义, 及各 field 内容 General MAC frame format frm control Bits 0–2 3 4–5 6 7 8 9 10–11 12–13 14–15 Field Frame Type Security Enabled Frame Pending AR PAN ID Compression Reserved Sequence Number Suppression IE Present Destination Addressing Mode Frame Version mac frm type b2 b1 b0 Description 0 0 0 Beacon 0 0 1 Data 0 1 0 Acknowledgment 0 1 1 MAC command 1 0 0 Reserved 1 0 1 Multipurpose 1 1 0 Fragment or Fraka 1 1 1 Extended Security Enabled 字段解析字段功能Security Enabled 字段用于指示 MAC 子层是否对该帧进行了安全保护。 Security Enabled 值 作用 1 启用 MAC 层安全保护，帧头包含Auxiliary Security Header 0 未启用安全保护，帧头不包含Auxiliary Security Header Frame Pending 字段解析字段功能Frame Pending 字段用于指示发送设备是否有更多数据等待发送给接收设备。 Frame Pending 值 作用 1 发送设备仍有待发送的数据，接收设备应继续监听 0 发送设备无待发送数据，接收设备可进入低功耗模式 适用场景信标帧（Beacon Frame） 仅在信标帧（Beacon Frame）或在 信标使能 PAN（beacon-enabled PAN）内的 CAP 时段 发送的数据帧中使用。 在 非信标使能 PAN（nonbeacon-enabled PAN）中，可在任意时间使用该字段。 低能耗（LE）CSL 模式 若 Frame Pending = 1，表示发送设备仍有数据，并期望接收设备保持射频（RF）开启，直到 Frame Pending 变为 0。 TSCH 模式 若 Frame Pending = 1，表示接收设备在 下一时隙（timeslot） 仍需保持在线，并在相同信道等待数据（若当前无调度的链路）。 其他情况 除上述情况外，Frame Pending 字段在 发送时应始终设为 0，接收时应忽略该字段。 AR 字段解析字段功能AR（Acknowledgment Request，确认请求）字段用于指定接收设备在收到数据帧（Data Frame）或 MAC 命令帧（MAC Command Frame）后，是否需要发送确认帧（Ack Frame）。 字段规则 AR 值 是否需要 Ack 适用场景 1 需要 关键数据，MAC 命令，可靠传输 0 不需要 广播帧，非关键数据，低功耗场景 AR 字段的影响提高传输可靠性启用 AR，发送设备可以确保数据成功到达，否则会进行重传（如果支持）。 降低能耗关闭 AR 可以减少额外的 Ack 传输，从而降低设备功耗，适用于低功耗 IoT 设备。 优化信道占用在高流量网络中，避免不必要的 Ack，可以减少信道竞争，提高整体通信效率。 PAN ID Compression 字段解析字段作用PAN ID Compression 字段用于指示 PAN ID（个人区域网络标识） 是否包含在 MAC 帧中，以减少数据开销。 解析规则 当 帧版本（Frame Version）字段值 为 0b00 或 0b01 时： 同时包含目标地址和源地址时： 若 目标 PAN ID 与源 PAN ID 相同，则 PAN ID Compression 设为 1，省略 Source PAN ID 字段。 若 目标 PAN ID 与源 PAN ID 不同，则 PAN ID Compression 设为 0，同时包含 Destination PAN ID 和 Source PAN ID 字段。 仅包含目标地址或源地址时： PAN ID Compression 设为 0，并且该地址的 PAN ID 字段必须包含在 MAC 帧中。 当 帧版本字段值 为 0b10 时： PAN ID Compression 字段的具体设置取决于 信标帧（Beacon Frame）、数据帧（Data Frame）、MAC 命令帧（MAC Command Frame）和确认帧（Ack Frame） 的地址格式，并遵循 表 7-2 规定的组合方式。 任何不符合 表 7-2 规定的组合方式不应生成。 Destination Address Source Address Destination PAN ID Source PAN ID PAN ID Compression Not Present Not Present Not Present Not Present 0 Not Present Not Present Present Not Present 1 Present Not Present Present Not Present 0 Present Not Present Not Present Not Present 1 Not Present Present Not Present Present 0 Not Present Present Not Present Not Present 1 Extended Extended Present Not Present 0 Extended Extended Not Present Not Present 1 Shorta Shorta Present Present 0 Shorta Extended Present Present 0 Extended Shorta Present Present 0 Shorta Extended Present Not Present 1 Extended Shorta Present Not Present 1 Shorta Shorta Present Not Present 1 总结 PAN ID Compression 值 含义 1 目标 PAN ID 与源 PAN ID 相同，省略 Source PAN ID 0 目标 PAN ID 与源 PAN ID 不同，需包含 Destination PAN ID 和 Source PAN ID 该字段的使用可以有效减少 MAC 帧长度，优化网络通信效率。📡 Sequence Number Suppression 字段字段作用Sequence Number Suppression 字段用于指示是否压制帧中的 Sequence Number（序列号） 字段。 Sequence Number Suppression 值 含义 1 序列号字段被压制，省略序列号 0 序列号字段存在 特殊情况： 如果 Frame Version（帧版本）字段 的值为 0b00 或 0b01，则 Sequence Number Suppression 字段必须为 0，即 序列号字段必须存在。 IE Present 字段字段作用IE Present 字段用于指示帧中是否包含 Information Elements (IEs)。 IE Present 值 含义 1 帧中包含 IEs 0 帧中不包含 IEs 特殊情况： 如果 Frame Version（帧版本）字段 的值为 0b00 或 0b01，则 IE Present 字段必须为 0，即帧中不包含 IEs。 此字段的设置对于确定帧的内容和处理方式非常重要。📦 Destination Addressing Mode 字段字段作用Destination Addressing Mode 字段用于指定帧的目标地址模式。此字段的值可以根据不同的帧类型和版本来决定帧的地址格式。 解析规则 Destination Addressing Mode 字段应设置为 Table 7-3 中列出的值之一。 如果 Destination Addressing Mode 字段的值为 0 且 Frame Type（帧类型）字段 指定为 Data frame 或 MAC command 且 Frame Version（帧版本）字段 为 0b00 或 0b01： Source Addressing Mode（源地址模式）字段 必须为非零值，表示帧是发送给 PAN coordinator，并且帧中的 Source PAN ID 字段指定了 PAN ID。 对于帧版本为 0b10 的情况： Destination Address 或 Destination PAN ID 或两者可能会被省略。 b1 b0 Description 0 0 PAN ID and address fields are not present. 0 1 Reserved 1 0 Address field contains a short address (16 bit). 1 1 Address field contains an extended address (64 bit). 总结 Destination Addressing Mode 值 含义 0 指定源地址信息，并且帧是发送给 PAN 协调器。 其他值 由 Table 7-3 定义，决定目标地址模式。 此字段定义了如何在数据帧中表示目标地址，影响帧的传输和处理。📡 Frame Version 字段字段作用Frame Version 字段是一个无符号整数，用于指定与帧对应的版本号。所有帧类型都应按照各自子条款中描述的方式设置 Frame Version 字段。 版本总结 Frame Version 字段决定了帧的版本号。 每种帧类型有不同的版本号要求，这些要求在 Table 7-4 中进行了总结。 版本适用性每个帧类型的适用版本总结如下： Frame Version 适用的帧类型 0b00 适用于特定帧类型，具体请参考 Table 7-4 0b01 适用于特定帧类型，具体请参考 Table 7-4 0b10 适用于特定帧类型，具体请参考 Table 7-4 Frame Type Frame Version 0b00 Frame Version 0b01 Frame Version 0b10 Frame Version 0b11 Beacon IEEE Std 802.15.4-2003 IEEE Std 802.15.4-2006 IEEE Std 802.15.4 Reserved Data IEEE Std 802.15.4-2003 IEEE Std 802.15.4-2006 IEEE Std 802.15.4 Reserved Acknowledgment IEEE Std 802.15.4-2003 IEEE Std 802.15.4-2006 IEEE Std 802.15.4 Reserved MAC Command IEEE Std 802.15.4-2003 IEEE Std 802.15.4-2006 IEEE Std 802.15.4 Reserved Reserved — — — — Multipurpose IEEE Std 802.15.4 Reserved Reserved Reserved Fragment Frame Version field not present in frame Frame Version field not present in frame Frame Version field not present in frame Frame Version field not present in frame Extended Frame Version field not present in frame Frame Version field not present in frame Frame Version field not present in frame Frame Version field not present in frame Source Addressing Mode field Source Addressing Mode 字段的值应设置为 Table 7-3 中列出的值之一。 当该字段为 0 且 Frame Type 字段指定为 Data frame 或 MAC command，并且 Frame Version 字段为 0b00 或 0b01，则 Destination Addressing Mode 字段必须为非零。 这种情况下，意味着该帧源自 PAN coordinator，其 PAN ID 由 Destination PAN ID 字段指定。 Sequence Number field Sequence Number 字段用于指定该帧的序列标识符。 对于 Beacon frame，该字段指定 BSN (Beacon Sequence Number)。 对于其他帧，该字段指定 DSN (Data Sequence Number)。 Destination PAN ID field Destination PAN ID 字段（如果存在）是一个无符号整数，指定目标设备所在的 PAN ID。 如果该字段的值为 广播 PAN ID（定义见 6.1），则所有当前监听该信道的设备都将其视为有效 PAN ID。 Destination Address field Destination Address 字段（如果存在）用于指定帧的接收者地址。 其长度由 Frame Control 字段的 Destination Addressing Mode（见 7.2.1.8）决定。 如果该字段的值为 广播短地址（定义见 6.1），则所有当前监听该信道的设备都将其视为有效地址。 该字段仅在 Destination Addressing Mode 字段非零时才包含在 MAC 帧中。 Source PAN ID field Source PAN ID 字段（如果存在）用于指定该帧的发送者所属于的 PAN ID。 设备的 PAN ID 初始由其加入 PAN 时决定，但可能会因 PAN ID 冲突解决（见 6.3.2）而发生变化。 Source Address field Source Address 字段（如果存在）用于指定该帧的发送者地址。 该字段仅在 Source Addressing Mode 字段非零时才包含在 MAC 帧 中。 Auxiliary Security Header field Auxiliary Security Header 字段包含用于 安全处理 所需的信息。 该字段仅在 Security Enabled 字段设为 1 时才会存在。 Auxiliary Security Header 字段的格式详见 9.4。 IE Field IE（Information Element）字段 为可变长度，包含一个或多个 IE。 由 Header IE 和 Payload IE 子字段组成。 该字段仅在 Frame Control 字段中的 IE Present 设为 1 时才会存在。 每个 IE 由 描述符（descriptor） 和 可选负载（optional payload） 组成，具体描述见 7.4。 Header IE Header IE（如果存在）位于 Auxiliary Security Header 之后，属于 MHR（MAC Header）。 Payload IE Payload IE（如果存在）位于 MHR 之后，属于 MAC payload，即 Payload IE 可能被加密。 Octets Variable … Variable 0&#x2F;2 Variable … Variable 0&#x2F;2 Field Header IE #1 … Header IE #n Header Termination IE Payload IE #1 … Payload IE #m Payload Termination IE 7.2.9 Frame Payload Field Frame Payload 字段 包含特定于各帧类型的信息。 如果 Security Enabled 字段设为 1，则 Frame Payload 可能受到 加密保护，详见 Clause 9。 7.2.10 FCS Field FCS（Frame Check Sequence）字段 包含一个 16-bit ITU-T CRC 或 32-bit CRC（符合 ANSI X3.66-1979.13）。 FCS 计算范围 包括 MHR 和 MAC Payload，统称为 计算字段（Calculation Field）。 兼容 SUN PHYs 或 TVWS PHYs 的设备必须实现 4-octet FCS。 7.4.1 IE List Termination说明 在确定 Header IEs 或 Payload IEs 是否需要终止时，不考虑 认证或加密过程。 下面的table 规定了 terminate IE ： HT1（Header Termination 1 IE），定义见 7.4.2.17。 HT2（Header Termination 2 IE），定义见 7.4.2.18。 注意事项 Header Termination IE 必须出现在 Payload IEs 之前，因为 Header IEs 和 Payload IEs 共享地址空间，无法直接区分二者的边界。因此，需要使用 Header Termination IE 来标识 Header IEs 的结束 和 Payload IEs 的开始。 Header IEs Present Payload IEs Present Data Payload Present Header Termination IE Included Payload Termination IE Included Notes No No No None None No IE lists present, hence no termination. Included here for completeness. Yes No No None None No termination is required because the end of the frame can be determined from the frame length and FCS length. No Yes No HT1 required Optional Header Termination IE 1 is required to signal end of the MHR and beginning of the Payload IE list. Yes Yes No HT1 required Optional Header Termination IE 1 is required while the Payload IE Termination is not required, but is allowed. No No Yes None None No IE lists present, hence no termination. Included here for completeness. Yes No Yes HT2 required None Header Termination IE 2 is used to signal end of the MHR and beginning of the MAC Payload. No Yes Yes HT1 required Required — Yes Yes Yes HT1 required Required — header ieHT1 &#x2F; HT2 ie 也使用了下表的格式，只不过 content len &#x3D; 0, ElementID &#x3D; 0x7E&#x2F;7F; Element ID 的使用，直接就代表了具体的 header ie, 而 payload IE 中的 Group ID 则代表了更多无限的可能 ～ Group 下还有 Nest IE ～ sub-ID Bits 0–6 7–14 15 0–127 Field Length Element ID Type &#x3D; 0 Content payload ie Bits 0–10 11–14 15 0–2047 Field Length Group ID Type &#x3D; 1 Content nested short&#x2F;long ie ~ payload ie ~ group Id &#x3D; mlme(0x1)nested ie 下又分出了很多 sub id ie Bits 0–7 8–14 15 0–255 Field Length Sub-ID Type &#x3D; 0 Content Bits 0–10 11–14 15 0–2047 Field Length Sub-ID Type &#x3D; 0 Content 主要介绍了 802.15.4 具体的 frm type 对应的 mac frm formats beacon frm data frm ack frm mac cmd frm multipurpose frm ext frm","tags":[{"name":"802.15.4","slug":"802-15-4","permalink":"http://example.com/tags/802-15-4/"}],"categories":[{"name":"802.15.4","slug":"802-15-4","permalink":"http://example.com/categories/802-15-4/"}]},{"title":"802.15.4-sec_related","date":"2025-03-08T02:54:19.000Z","path":"wiki/802-15-4-sec-related/","text":"以 drawio 流程图的形式介绍了 802.15.4(2015) mac layer 的加解密，主要有：incoming frm dec, outcoming frm enc, secure related PIBs。 注：802.15.4 2015&#x2F;2006&#x2F;2003 版本加解密flow上存在差异,点击流程图可以全屏展开 outgoing frm - enc incoming frm - sec on - dec incoming frm - sec on - dec sec pib related","tags":[{"name":"802.15.4","slug":"802-15-4","permalink":"http://example.com/tags/802-15-4/"}],"categories":[{"name":"802.15.4","slug":"802-15-4","permalink":"http://example.com/categories/802-15-4/"}]}],"categories":[{"name":"802.15.4","slug":"802-15-4","permalink":"http://example.com/categories/802-15-4/"},{"name":"技术杂谈","slug":"技术杂谈","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"802.15.4","slug":"802-15-4","permalink":"http://example.com/tags/802-15-4/"},{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]}