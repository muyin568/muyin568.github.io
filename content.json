{"pages":[{"title":"About","date":"2025-03-11T14:11:10.173Z","path":"about/index.html","text":""},{"title":"categories","date":"2025-03-12T00:21:03.000Z","path":"categories/index.html","text":""},{"title":"Tags","date":"2025-03-12T23:44:41.796Z","path":"tags/index.html","text":""}],"posts":[{"title":"hexo github.io image 显示异常","date":"2025-03-25T23:53:42.000Z","path":"wiki/hexo-image-sync-my-solution/","text":"在使用 hexo 写 blog 插入图片时，大多数会使用 typora&#x2F;markdown allin one 等去 preview，此时的(preview) img path 是相对 source&#x2F;_posts&#x2F;**.md 文档的路径；而 github.io 静态页面展示图片是要使用public 为 root path 的路径引用图片；路径不match 会导致图片显示异常，网上也有很多的案例和解法，使用起来感觉始终不顺手，在这里放上我的解法。 1.创建如下目录结构：blog/source/images , blog/public/images , blog/sync.py 2.编辑 **.md 并想要预览时，请插入类似下面的图片链接 1&lt;center&gt;&lt;img src=&quot;/../images/802-15-4-mac-frm/4_beacon_frm.png&quot; width=&quot;800px&quot;&gt;&lt;/center&gt; 3.完成编辑后在 blog folder 下运行 python3 sync.py add sync, 会将 source/images 下 img sync 到 public/imgs, 同时将所有 **.md 中的图片链接前加“/”转为如下，使可以在github.io上显示 1&lt;center&gt;&lt;img src=&quot;/../images/802-15-4-mac-frm/4_beacon_frm.png&quot; width=&quot;800px&quot;&gt;&lt;/center&gt; 4.运行 python3 sync.py add sync 后 md preview 将无法正常显示图片，如果想重新编辑可以再运行 python3 sync.py remove 即可 5.我的上blog step: python3 sync.py add sync -> hexo c -> hexo g -> hexo d **下面附上sync.py的code，这个是请教chatgpt帮忙写的** 命令 作用 python sync_and_modify.py sync 仅同步 source/images 到 public/images python sync_and_modify.py add 仅增加 Markdown 中 img src 里的 / python sync_and_modify.py sync add 同步图片 + 增加 / python sync_and_modify.py remove 仅去掉 Markdown 中 img src 里的 /（单独执行） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108import osimport shutilimport reimport sysdef sync_folders(src, dest): &quot;&quot;&quot; 同步 source/images 到 public/images，确保文件和目录保持一致。 &quot;&quot;&quot; if not os.path.exists(src): print(f&quot;源目录 &#123;src&#125; 不存在！&quot;) return if not os.path.exists(dest): os.makedirs(dest) # 如果目标文件夹不存在，则创建 for root, dirs, files in os.walk(src): rel_path = os.path.relpath(root, src) target_dir = os.path.join(dest, rel_path) if not os.path.exists(target_dir): os.makedirs(target_dir) for file in files: src_file = os.path.join(root, file) dest_file = os.path.join(target_dir, file) if not os.path.exists(dest_file) or os.path.getmtime(src_file) &gt; os.path.getmtime(dest_file): shutil.copy2(src_file, dest_file) print(f&quot;同步文件: &#123;src_file&#125; -&gt; &#123;dest_file&#125;&quot;) print(&quot;图片同步完成！&quot;)def modify_image_paths_in_markdown(posts_folder, mode): &quot;&quot;&quot; 遍历 source/_posts 目录下所有 .md 文件，修改 img 标签中的 src 路径。 参数: posts_folder: Markdown 文件所在目录（如 source/_posts） mode: &quot;remove_slash&quot; -&gt; 移除 img src 里开头的 &quot;/&quot; &quot;add_slash&quot; -&gt; 给 img src 里开头增加 &quot;/&quot; &quot;&quot;&quot; if not os.path.exists(posts_folder): print(f&quot;Markdown 目录 &#123;posts_folder&#125; 不存在！&quot;) return # 正则匹配 `&lt;img src=&quot;...&quot;` 语法 pattern_remove_slash = re.compile(r&#x27;(&lt;img src=&quot;)/(\\.\\./images/[^&quot;]+&quot;)&#x27;) pattern_add_slash = re.compile(r&#x27;(&lt;img src=&quot;)(\\.\\./images/[^&quot;]+&quot;)&#x27;) modified_files = 0 for filename in os.listdir(posts_folder): if filename.endswith(&quot;.md&quot;): file_path = os.path.join(posts_folder, filename) with open(file_path, &quot;r&quot;, encoding=&quot;utf-8&quot;) as f: content = f.read() # 根据模式修改 if mode == &quot;remove_slash&quot;: new_content = pattern_remove_slash.sub(r&#x27;\\1\\2&#x27;, content) elif mode == &quot;add_slash&quot;: new_content = pattern_add_slash.sub(r&#x27;\\1/\\2&#x27;, content) else: print(f&quot;未知模式：&#123;mode&#125;&quot;) return # 如果内容发生变化，则写入文件 if content != new_content: with open(file_path, &quot;w&quot;, encoding=&quot;utf-8&quot;) as f: f.write(new_content) print(f&quot;已修改文件: &#123;filename&#125;&quot;) modified_files += 1 print(f&quot;Markdown 文件路径修改完成，共修改 &#123;modified_files&#125; 个文件！&quot;)def main(): # 设置文件夹路径 source_images = &quot;source/images&quot; public_images = &quot;public/images&quot; markdown_folder = &quot;source/_posts&quot; # 解析命令行参数 args = set(arg.lower() for arg in sys.argv[1:]) if not args: print(&quot;用法: python sync_and_modify.py [sync] [add] | remove&quot;) sys.exit(1) if &quot;remove&quot; in args and len(args) &gt; 1: print(&quot;错误：remove 只能单独执行，不能与 sync 或 add 组合！&quot;) sys.exit(1) if &quot;sync&quot; in args: sync_folders(source_images, public_images) if &quot;add&quot; in args: modify_image_paths_in_markdown(markdown_folder, mode=&quot;add_slash&quot;) if &quot;remove&quot; in args: modify_image_paths_in_markdown(markdown_folder, mode=&quot;remove_slash&quot;)if __name__ == &quot;__main__&quot;: main()","tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}],"categories":[{"name":"技术杂谈","slug":"技术杂谈","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%88/"}]},{"title":"802.15.4-mac_frm_genernal","date":"2025-03-10T11:23:52.000Z","path":"wiki/802-15-4-mac-frm/","text":"主要介绍了 802.15.4 mac layer pdu 形式与各 bit 含义 General MAC frame format frm control Bits 0–2 3 4–5 6 7 8 9 10–11 12–13 14–15 Field Frame Type Security Enabled Frame Pending AR PAN ID Compression Reserved Sequence Number Suppression IE Present Destination Addressing Mode Frame Version mac frm type b2 b1 b0 Description 0 0 0 Beacon 0 0 1 Data 0 1 0 Acknowledgment 0 1 1 MAC command 1 0 0 Reserved 1 0 1 Multipurpose 1 1 0 Fragment or Fraka 1 1 1 Extended Security Enabled 字段解析字段功能Security Enabled 字段用于指示 MAC 子层是否对该帧进行了安全保护。 Security Enabled 值 作用 1 启用 MAC 层安全保护，帧头包含Auxiliary Security Header 0 未启用安全保护，帧头不包含Auxiliary Security Header Frame Pending 字段解析字段功能Frame Pending 字段用于指示发送设备是否有更多数据等待发送给接收设备。 Frame Pending 值 作用 1 发送设备仍有待发送的数据，接收设备应继续监听 0 发送设备无待发送数据，接收设备可进入低功耗模式 适用场景信标帧（Beacon Frame） 仅在信标帧（Beacon Frame）或在 信标使能 PAN（beacon-enabled PAN）内的 CAP 时段 发送的数据帧中使用。 在 非信标使能 PAN（nonbeacon-enabled PAN）中，可在任意时间使用该字段。 低能耗（LE）CSL 模式 若 Frame Pending = 1，表示发送设备仍有数据，并期望接收设备保持射频（RF）开启，直到 Frame Pending 变为 0。 TSCH 模式 若 Frame Pending = 1，表示接收设备在 下一时隙（timeslot） 仍需保持在线，并在相同信道等待数据（若当前无调度的链路）。 其他情况 除上述情况外，Frame Pending 字段在 发送时应始终设为 0，接收时应忽略该字段。 AR 字段解析字段功能AR（Acknowledgment Request，确认请求）字段用于指定接收设备在收到数据帧（Data Frame）或 MAC 命令帧（MAC Command Frame）后，是否需要发送确认帧（Ack Frame）。 字段规则 AR 值 是否需要 Ack 适用场景 1 需要 关键数据，MAC 命令，可靠传输 0 不需要 广播帧，非关键数据，低功耗场景 AR 字段的影响提高传输可靠性启用 AR，发送设备可以确保数据成功到达，否则会进行重传（如果支持）。 降低能耗关闭 AR 可以减少额外的 Ack 传输，从而降低设备功耗，适用于低功耗 IoT 设备。 优化信道占用在高流量网络中，避免不必要的 Ack，可以减少信道竞争，提高整体通信效率。 PAN ID Compression 字段解析字段作用PAN ID Compression 字段用于指示 PAN ID（个人区域网络标识） 是否包含在 MAC 帧中，以减少数据开销。 解析规则 当 帧版本（Frame Version）字段值 为 0b00 或 0b01 时： 同时包含目标地址和源地址时： 若 目标 PAN ID 与源 PAN ID 相同，则 PAN ID Compression 设为 1，省略 Source PAN ID 字段。 若 目标 PAN ID 与源 PAN ID 不同，则 PAN ID Compression 设为 0，同时包含 Destination PAN ID 和 Source PAN ID 字段。 仅包含目标地址或源地址时： PAN ID Compression 设为 0，并且该地址的 PAN ID 字段必须包含在 MAC 帧中。 当 帧版本字段值 为 0b10 时： PAN ID Compression 字段的具体设置取决于 信标帧（Beacon Frame）、数据帧（Data Frame）、MAC 命令帧（MAC Command Frame）和确认帧（Ack Frame） 的地址格式，并遵循 表 7-2 规定的组合方式。 任何不符合 表 7-2 规定的组合方式不应生成。 Destination Address Source Address Destination PAN ID Source PAN ID PAN ID Compression Not Present Not Present Not Present Not Present 0 Not Present Not Present Present Not Present 1 Present Not Present Present Not Present 0 Present Not Present Not Present Not Present 1 Not Present Present Not Present Present 0 Not Present Present Not Present Not Present 1 Extended Extended Present Not Present 0 Extended Extended Not Present Not Present 1 Shorta Shorta Present Present 0 Shorta Extended Present Present 0 Extended Shorta Present Present 0 Shorta Extended Present Not Present 1 Extended Shorta Present Not Present 1 Shorta Shorta Present Not Present 1 总结 PAN ID Compression 值 含义 1 目标 PAN ID 与源 PAN ID 相同，省略 Source PAN ID 0 目标 PAN ID 与源 PAN ID 不同，需包含 Destination PAN ID 和 Source PAN ID 该字段的使用可以有效减少 MAC 帧长度，优化网络通信效率。📡 Sequence Number Suppression 字段字段作用Sequence Number Suppression 字段用于指示是否压制帧中的 Sequence Number（序列号） 字段。 Sequence Number Suppression 值 含义 1 序列号字段被压制，省略序列号 0 序列号字段存在 特殊情况： 如果 Frame Version（帧版本）字段 的值为 0b00 或 0b01，则 Sequence Number Suppression 字段必须为 0，即 序列号字段必须存在。 IE Present 字段字段作用IE Present 字段用于指示帧中是否包含 Information Elements (IEs)。 IE Present 值 含义 1 帧中包含 IEs 0 帧中不包含 IEs 特殊情况： 如果 Frame Version（帧版本）字段 的值为 0b00 或 0b01，则 IE Present 字段必须为 0，即帧中不包含 IEs。 此字段的设置对于确定帧的内容和处理方式非常重要。📦 Destination Addressing Mode 字段字段作用Destination Addressing Mode 字段用于指定帧的目标地址模式。此字段的值可以根据不同的帧类型和版本来决定帧的地址格式。 解析规则 Destination Addressing Mode 字段应设置为 Table 7-3 中列出的值之一。 如果 Destination Addressing Mode 字段的值为 0 且 Frame Type（帧类型）字段 指定为 Data frame 或 MAC command 且 Frame Version（帧版本）字段 为 0b00 或 0b01： Source Addressing Mode（源地址模式）字段 必须为非零值，表示帧是发送给 PAN coordinator，并且帧中的 Source PAN ID 字段指定了 PAN ID。 对于帧版本为 0b10 的情况： Destination Address 或 Destination PAN ID 或两者可能会被省略。 b1 b0 Description 0 0 PAN ID and address fields are not present. 0 1 Reserved 1 0 Address field contains a short address (16 bit). 1 1 Address field contains an extended address (64 bit). 总结 Destination Addressing Mode 值 含义 0 指定源地址信息，并且帧是发送给 PAN 协调器。 其他值 由 Table 7-3 定义，决定目标地址模式。 此字段定义了如何在数据帧中表示目标地址，影响帧的传输和处理。📡 Frame Version 字段字段作用Frame Version 字段是一个无符号整数，用于指定与帧对应的版本号。所有帧类型都应按照各自子条款中描述的方式设置 Frame Version 字段。 版本总结 Frame Version 字段决定了帧的版本号。 每种帧类型有不同的版本号要求，这些要求在 Table 7-4 中进行了总结。 版本适用性每个帧类型的适用版本总结如下： Frame Version 适用的帧类型 0b00 适用于特定帧类型，具体请参考 Table 7-4 0b01 适用于特定帧类型，具体请参考 Table 7-4 0b10 适用于特定帧类型，具体请参考 Table 7-4 Frame Type Frame Version 0b00 Frame Version 0b01 Frame Version 0b10 Frame Version 0b11 Beacon IEEE Std 802.15.4-2003 IEEE Std 802.15.4-2006 IEEE Std 802.15.4 Reserved Data IEEE Std 802.15.4-2003 IEEE Std 802.15.4-2006 IEEE Std 802.15.4 Reserved Acknowledgment IEEE Std 802.15.4-2003 IEEE Std 802.15.4-2006 IEEE Std 802.15.4 Reserved MAC Command IEEE Std 802.15.4-2003 IEEE Std 802.15.4-2006 IEEE Std 802.15.4 Reserved Reserved — — — — Multipurpose IEEE Std 802.15.4 Reserved Reserved Reserved Fragment Frame Version field not present in frame Frame Version field not present in frame Frame Version field not present in frame Frame Version field not present in frame Extended Frame Version field not present in frame Frame Version field not present in frame Frame Version field not present in frame Frame Version field not present in frame Source Addressing Mode field Source Addressing Mode 字段的值应设置为 Table 7-3 中列出的值之一。 当该字段为 0 且 Frame Type 字段指定为 Data frame 或 MAC command，并且 Frame Version 字段为 0b00 或 0b01，则 Destination Addressing Mode 字段必须为非零。 这种情况下，意味着该帧源自 PAN coordinator，其 PAN ID 由 Destination PAN ID 字段指定。 Sequence Number field Sequence Number 字段用于指定该帧的序列标识符。 对于 Beacon frame，该字段指定 BSN (Beacon Sequence Number)。 对于其他帧，该字段指定 DSN (Data Sequence Number)。 Destination PAN ID field Destination PAN ID 字段（如果存在）是一个无符号整数，指定目标设备所在的 PAN ID。 如果该字段的值为 广播 PAN ID（定义见 6.1），则所有当前监听该信道的设备都将其视为有效 PAN ID。 Destination Address field Destination Address 字段（如果存在）用于指定帧的接收者地址。 其长度由 Frame Control 字段的 Destination Addressing Mode（见 7.2.1.8）决定。 如果该字段的值为 广播短地址（定义见 6.1），则所有当前监听该信道的设备都将其视为有效地址。 该字段仅在 Destination Addressing Mode 字段非零时才包含在 MAC 帧中。 Source PAN ID field Source PAN ID 字段（如果存在）用于指定该帧的发送者所属于的 PAN ID。 设备的 PAN ID 初始由其加入 PAN 时决定，但可能会因 PAN ID 冲突解决（见 6.3.2）而发生变化。 Source Address field Source Address 字段（如果存在）用于指定该帧的发送者地址。 该字段仅在 Source Addressing Mode 字段非零时才包含在 MAC 帧 中。 Auxiliary Security Header field Auxiliary Security Header 字段包含用于 安全处理 所需的信息。 该字段仅在 Security Enabled 字段设为 1 时才会存在。 Auxiliary Security Header 字段的格式详见 9.4。 IE Field IE（Information Element）字段 为可变长度，包含一个或多个 IE。 由 Header IE 和 Payload IE 子字段组成。 该字段仅在 Frame Control 字段中的 IE Present 设为 1 时才会存在。 每个 IE 由 描述符（descriptor） 和 可选负载（optional payload） 组成，具体描述见 7.4。 Header IE Header IE（如果存在）位于 Auxiliary Security Header 之后，属于 MHR（MAC Header）。 Payload IE Payload IE（如果存在）位于 MHR 之后，属于 MAC payload，即 Payload IE 可能被加密。 Octets Variable … Variable 0&#x2F;2 Variable … Variable 0&#x2F;2 Field Header IE #1 … Header IE #n Header Termination IE Payload IE #1 … Payload IE #m Payload Termination IE 7.2.9 Frame Payload Field Frame Payload 字段 包含特定于各帧类型的信息。 如果 Security Enabled 字段设为 1，则 Frame Payload 可能受到 加密保护，详见 Clause 9。 7.2.10 FCS Field FCS（Frame Check Sequence）字段 包含一个 16-bit ITU-T CRC 或 32-bit CRC（符合 ANSI X3.66-1979.13）。 FCS 计算范围 包括 MHR 和 MAC Payload，统称为 计算字段（Calculation Field）。 兼容 SUN PHYs 或 TVWS PHYs 的设备必须实现 4-octet FCS。 7.4.1 IE List Termination说明 在确定 Header IEs 或 Payload IEs 是否需要终止时，不考虑 认证或加密过程。 下面的table 规定了 terminate IE ： HT1（Header Termination 1 IE），定义见 7.4.2.17。 HT2（Header Termination 2 IE），定义见 7.4.2.18。 注意事项 Header Termination IE 必须出现在 Payload IEs 之前，因为 Header IEs 和 Payload IEs 共享地址空间，无法直接区分二者的边界。因此，需要使用 Header Termination IE 来标识 Header IEs 的结束 和 Payload IEs 的开始。 Header IEs Present Payload IEs Present Data Payload Present Header Termination IE Included Payload Termination IE Included Notes No No No None None No IE lists present, hence no termination. Included here for completeness. Yes No No None None No termination is required because the end of the frame can be determined from the frame length and FCS length. No Yes No HT1 required Optional Header Termination IE 1 is required to signal end of the MHR and beginning of the Payload IE list. Yes Yes No HT1 required Optional Header Termination IE 1 is required while the Payload IE Termination is not required, but is allowed. No No Yes None None No IE lists present, hence no termination. Included here for completeness. Yes No Yes HT2 required None Header Termination IE 2 is used to signal end of the MHR and beginning of the MAC Payload. No Yes Yes HT1 required Required — Yes Yes Yes HT1 required Required — header ieHT1 &#x2F; HT2 ie 也使用了下表的格式，只不过 content len &#x3D; 0, ElementID &#x3D; 0x7E&#x2F;7F; Element ID 的使用，直接就代表了具体的 header ie, 而 payload IE 中的 Group ID 则代表了更多无限的可能 ～ Group 下还有 Nest IE ～ sub-ID Bits 0–6 7–14 15 0–127 Field Length Element ID Type &#x3D; 0 Content payload ie Bits 0–10 11–14 15 0–2047 Field Length Group ID Type &#x3D; 1 Content nested short&#x2F;long ie ~ payload ie ~ group Id &#x3D; mlme(0x1)nested ie 下又分出了很多 sub id ie Bits 0–7 8–14 15 0–255 Field Length Sub-ID Type &#x3D; 0 Content Bits 0–10 11–14 15 0–2047 Field Length Sub-ID Type &#x3D; 0 Content 主要介绍了 802.15.4 具体的 frm type 对应的 mac frm formats beacon frm data frm ack frm mac cmd frm multipurpose frm ext frm","tags":[{"name":"802.15.4","slug":"802-15-4","permalink":"http://example.com/tags/802-15-4/"}],"categories":[{"name":"802.15.4","slug":"802-15-4","permalink":"http://example.com/categories/802-15-4/"}]},{"title":"802.15.4-sec_related","date":"2025-03-08T02:54:19.000Z","path":"wiki/802-15-4-sec-related/","text":"以 drawio 流程图的形式介绍了 802.15.4(2015) mac layer 的加解密，主要有：incoming frm dec, outcoming frm enc, secure related PIBs。 注：802.15.4 2015&#x2F;2006&#x2F;2003 版本加解密flow上存在差异,点击流程图可以全屏展开 outgoing frm - enc incoming frm - sec on - dec incoming frm - sec on - dec sec pib related","tags":[{"name":"802.15.4","slug":"802-15-4","permalink":"http://example.com/tags/802-15-4/"}],"categories":[{"name":"802.15.4","slug":"802-15-4","permalink":"http://example.com/categories/802-15-4/"}]}],"categories":[{"name":"技术杂谈","slug":"技术杂谈","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%88/"},{"name":"802.15.4","slug":"802-15-4","permalink":"http://example.com/categories/802-15-4/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"802.15.4","slug":"802-15-4","permalink":"http://example.com/tags/802-15-4/"}]}